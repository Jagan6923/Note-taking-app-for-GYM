{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gymmie\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  // State to store the quote\n  const [quote, setQuote] = useState(''); // Fetch quotes from the API when the component mounts\n\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(response => response.json()).then(data => {\n      // Select a random quote from the fetched data\n      const randomQuote = data[Math.floor(Math.random() * data.length)];\n      setQuote(randomQuote.text); // Store the quote in state\n    }).catch(error => console.error(\"Error fetching quotes:\", error));\n  }, []); // Empty dependency array ensures this runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gymmie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), quote && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: [\"\\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"+0fjIodrFDijtLyRDbc2ItdycKA=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","quote","setQuote","fetch","then","response","json","data","randomQuote","Math","floor","random","length","text","catch","error","console"],"sources":["D:/Gymmie/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Navbar = () => {\r\n  // State to store the quote\r\n  const [quote, setQuote] = useState('');\r\n\r\n  // Fetch quotes from the API when the component mounts\r\n  useEffect(() => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Select a random quote from the fetched data\r\n        const randomQuote = data[Math.floor(Math.random() * data.length)];\r\n        setQuote(randomQuote.text); // Store the quote in state\r\n      })\r\n      .catch(error => console.error(\"Error fetching quotes:\", error));\r\n  }, []); // Empty dependency array ensures this runs only once\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <h1>Gymmie</h1>\r\n        {/* Display the quote if available */}\r\n        {quote && (\r\n          <p className=\"quote\">\r\n            \"{quote}\"\r\n          </p>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAFmB,CAInB;;EACAC,SAAS,CAAC,MAAM;IACdI,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZ;MACA,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAD,CAAxB;MACAV,QAAQ,CAACM,WAAW,CAACK,IAAb,CAAR,CAHY,CAGgB;IAC7B,CANH,EAOGC,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CAPlB;EAQD,CATQ,EASN,EATM,CAAT,CALmB,CAcX;;EAER,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAGGd,KAAK,iBACJ;QAAG,SAAS,EAAC,OAAb;QAAA,iBACIA,KADJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA7BD;;GAAMD,M;;KAAAA,M;AA+BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}