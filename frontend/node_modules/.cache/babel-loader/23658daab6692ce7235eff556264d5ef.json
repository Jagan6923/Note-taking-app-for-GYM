{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gymmie\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [quote, setQuote] = useState('');\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(response => response.json()).then(data => {\n      console.log(data); // Log the entire data array\n\n      const randomQuote = data[Math.floor(Math.random() * data.length)];\n      console.log(randomQuote); // Log the selected random quote\n\n      setQuote(randomQuote.text);\n    }).catch(error => console.error(\"Error fetching quotes:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gymmie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), quote && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote\",\n        children: [\"\\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"+0fjIodrFDijtLyRDbc2ItdycKA=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","quote","setQuote","fetch","then","response","json","data","console","log","randomQuote","Math","floor","random","length","text","catch","error"],"sources":["D:/Gymmie/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Navbar = () => {\r\n  const [quote, setQuote] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data); // Log the entire data array\r\n        const randomQuote = data[Math.floor(Math.random() * data.length)];\r\n        console.log(randomQuote); // Log the selected random quote\r\n        setQuote(randomQuote.text);\r\n      })\r\n      .catch(error => console.error(\"Error fetching quotes:\", error));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"navbar-container\">\r\n        <h1>Gymmie</h1>\r\n        {quote && <p className=\"quote\">\"{quote}\"</p>}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACdI,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADY,CACO;;MACnB,MAAMG,WAAW,GAAGH,IAAI,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,IAAI,CAACO,MAAhC,CAAD,CAAxB;MACAN,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAHY,CAGc;;MAC1BR,QAAQ,CAACQ,WAAW,CAACK,IAAb,CAAR;IACD,CAPH,EAQGC,KARH,CAQSC,KAAK,IAAIT,OAAO,CAACS,KAAR,CAAc,wBAAd,EAAwCA,KAAxC,CARlB;EASD,CAVQ,EAUN,EAVM,CAAT;EAaA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGhB,KAAK,iBAAI;QAAG,SAAS,EAAC,OAAb;QAAA,iBAAuBA,KAAvB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFZ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAxBD;;GAAMD,M;;KAAAA,M;AA0BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}